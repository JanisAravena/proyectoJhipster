package com.mycompany.myapp.domain;

import static org.assertj.core.api.Assertions.assertThat;

public class NoticiasAsserts {

    /**
     * Asserts that the entity has all properties (fields/relationships) set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertNoticiasAllPropertiesEquals(Noticias expected, Noticias actual) {
        assertNoticiasAutoGeneratedPropertiesEquals(expected, actual);
        assertNoticiasAllUpdatablePropertiesEquals(expected, actual);
    }

    /**
     * Asserts that the entity has all updatable properties (fields/relationships) set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertNoticiasAllUpdatablePropertiesEquals(Noticias expected, Noticias actual) {
        assertNoticiasUpdatableFieldsEquals(expected, actual);
        assertNoticiasUpdatableRelationshipsEquals(expected, actual);
    }

    /**
     * Asserts that the entity has all the auto generated properties (fields/relationships) set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertNoticiasAutoGeneratedPropertiesEquals(Noticias expected, Noticias actual) {
        assertThat(expected)
            .as("Verify Noticias auto generated properties")
            .satisfies(e -> assertThat(e.getId()).as("check id").isEqualTo(actual.getId()));
    }

    /**
     * Asserts that the entity has all the updatable fields set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertNoticiasUpdatableFieldsEquals(Noticias expected, Noticias actual) {
        assertThat(expected)
            .as("Verify Noticias relevant properties")
            .satisfies(e -> assertThat(e.getTitulo()).as("check titulo").isEqualTo(actual.getTitulo()))
            .satisfies(e -> assertThat(e.getContenido()).as("check contenido").isEqualTo(actual.getContenido()))
            .satisfies(e -> assertThat(e.getFechaPublicacion()).as("check fechaPublicacion").isEqualTo(actual.getFechaPublicacion()))
            .satisfies(e -> assertThat(e.getAutor()).as("check autor").isEqualTo(actual.getAutor()));
    }

    /**
     * Asserts that the entity has all the updatable relationships set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertNoticiasUpdatableRelationshipsEquals(Noticias expected, Noticias actual) {}
}
